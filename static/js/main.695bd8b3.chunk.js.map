{"version":3,"sources":["CommonComponents.js","Utils.js","config.js","components/ChartView.js","components/MapView.js","components/ProgressBar.js","components/ProjectPanel.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Container","styled","div","_templateObject","AboutText","react_default","a","createElement","style","textAlign","LoginWindow","_ref","onClick","Panel_default","CommonComponents_AboutText","marginTop","Button_default","half","clear","large","LoaderWindow","Loader_default","getProjectName","projectItem","title","replace","portalUrl","loader","url","defaults","global","legend","tooltips","enabled","defaultParams","returnGeometry","returnDistinctValues","returnIdsOnly","returnCountOnly","outFields","ChartView","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","labelData","userData","projectUrl","_this2","query","objectSpread","concat","where","groupByFieldsForStatistics","outStatistics","statisticType","onStatisticField","outStatisticFieldName","orderByFields","sqlFormat","params","token","queryFeatures","then","res","_res$features$reduce","features","reduce","acc","f","data","push","attributes","date","Date","labels","getMonth","getDay","nextState","datasets","label","fill","borderColor","backgroundColor","setState","_this3","_res$features$reduce2","prevProps","project","id","_updateTimeSeriesDataset","_updateUserDataset","margin","es","height","options","scales","yAxes","scaleLabel","display","labelString","ticks","beginAtZero","Component","dotRenderer","type","symbol","size","color","outline","width","polygonRenderer","MapView","context","loadedModules","_onEditSync","bind","assertThisInitialized","_onZoomChange","_chartRef","React","createRef","newValue","oldValue","propertyName","target","onProjectEdited","lyr","renderer","loadModules","_ref2","slicedToArray","Map","LayerList","Editor","ImageryLayer","FeatureLayer","wU","rgbLyr","popupEnabled","infrLyr","portalItem","visible","ndviLyr","map","basemap","layers","view","container","center","zoom","constraints","snapToZoom","when","_","layerList","ui","add","scaleHandler","watch","isEditor","editor","watchHandler","viewModel","catch","er","console","log","lM","queryExtent","count","goTo","extent","fullExtent","remove","_addLayerFromProps","current","chartVisible","chart","ref","position","top","right","padding","background","boxShadow","components_ChartView","Fragment","maxHeight","flexGrow","ProgressBarContainer","ProgressBar_templateObject","ProgressBarFiller","_templateObject2","ProgressBar","percentage","rightLabel","CornerButton","Button","ProjectPanel_templateObject","AdjustedTitle","CardTitle","ProjectPanel_templateObject2","ThinPencil","PencilIcon","_templateObject3","ThinGraph","GraphTimeSeriesIcon","_templateObject4","RightLabel","_templateObject5","ProjectCard","Card","_templateObject6","selected","ActionButton","_onClick","icon","small","PureComponent","ProjectPanel","portal","_getProjectCard","_onProjectSelected","projects","selectedId","queryItems","sortField","sortOrder","num","results","p","tag","tags","find","t","includes","nFeatures","parseInt","max","onProjectsLoaded","onProjectSelected","i","undefined","labelCounts","progress","Math","ceil","maxString","toString","currentString","key","maxWidth","marginBottom","ProjectPanel_ActionButton","components_ProgressBar","App","esriId","_onSignInClick","_onSignOutClick","_fetchLabelCountForProject","esriLoaded","user","OAuthInfo","Portal","info","appId","registerOAuthInfos","checkSignInStatus","load","privileges","fullName","credential","name","FL","queryFeatureCount","nextCounts","defineProperty","forEach","getCredential","destroyCredentials","window","components_ProjectPanel","components_MapView","CommonComponents_LoginWindow","CommonComponents_LoaderWindow","signOutButton","white","SignOutIcon_default","iconPosition","TopNav_default","TopNav","src","Logo","justifyContent","Boolean","location","hostname","match","ReactDOM","render","CalciteThemeProvider_default","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.695bd8b3.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport Loader from 'calcite-react/Loader';\nimport Panel from 'calcite-react/Panel';\nimport Button from 'calcite-react/Button';\n\nconst Container = styled.div`\n  margin-top: 7rem;\n  max-width: 40rem;\n`;\n\nconst AboutText = () => (\n  <div>\n  <h1 style={{textAlign: \"center\"}}>Hello (Prospective) Partner!</h1>\n  <p>This is a quick demo to showcase Partner User Types. Feature extraction and data labelling are hot topics, so imagine you're building a product to create data labels (manually for now). There are two personas:</p>\n  <ul>\n    <li>Labelers: people drawing features to train models</li>\n    <li>Managers: people monitoring the status of labelling projects</li>\n  </ul>\n  <p>Log in to explore the experiences for these two personas! </p>\n  </div>\n)\n\nconst LoginWindow = ({onClick}) => (\n  <Container>\n    <Panel>\n      <AboutText/>\n      <div style={{textAlign: \"center\", marginTop: \"2rem\"}}>\n        <Button half clear large onClick={onClick}>\n          Log In\n        </Button>\n      </div>\n    </Panel>\n  </Container>\n)\n\nconst LoaderWindow = () => (\n  <Container>\n    <Loader/>\n  </Container>\n)\n\n\n\nexport {LoginWindow, LoaderWindow };","const getProjectName = (projectItem) => {\n  return projectItem.title.replace('Edit', '');\n}\n\nexport {\n  getProjectName\n}","const portalUrl = \"https://www.arcgis.com/sharing\";\nconst appId = \"4Je20Hog0H13ZgXI\";\nconst loader = {\n  url: \"https://js.arcgis.com/4.12/\"\n}\nexport {portalUrl, appId, loader};","import React, {Component} from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport {\n  queryFeatures,\n} from \"@esri/arcgis-rest-feature-layer\";\nimport { defaults } from 'react-chartjs-2';\n\ndefaults.global.legend = false;\ndefaults.global.tooltips.enabled = false;\n\nconst defaultParams = {\n  returnGeometry: false,\n  returnDistinctValues: false,\n  returnIdsOnly: false,\n  returnCountOnly: false,\n  outFields: '*',\n}\n\nclass ChartView extends Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n      labelData: {},\n      userData: {}\n    }\n  }\n\n  _updateTimeSeriesDataset(projectUrl){\n\n    const query = {\n      ...defaultParams,\n      url: `${projectUrl}/0`,\n      where: \"1=1\",\n      groupByFieldsForStatistics: \"CAST(CreationDate as DATE)\",\n      outStatistics: [\n        {\n          statisticType: \"count\",\n          onStatisticField: \"CreationDate\",\n          outStatisticFieldName: \"total_labels\"\n        }\n      ],\n      orderByFields: \"CAST(CreationDate as DATE)\",\n      sqlFormat: \"standard\",\n      params: {\n        token: this.props.token,\n      }\n    }\n\n    queryFeatures(query)\n      .then(res => {\n        const {labels, data} = res.features.reduce((acc, f) => {\n          acc.data.push(f.attributes['total_labels']);\n          const date = new Date(f.attributes['EXPR_1']);\n          acc.labels.push(`${date.getMonth() + 1}/${date.getDay()+1}`);\n          return acc;\n        }, {labels: [], data: []})\n\n        const nextState = {\n          labels: labels,\n          datasets: [{\n            label: 'Label Counts',\n            fill: false,\n            data: data,\n            borderColor: \"#56a5d8\",\n            backgroundColor: \"#56a5d8\"\n          }]\n        }\n        this.setState({labelData: nextState});\n        \n      });\n  }\n\n  _updateUserDataset(projectUrl){\n    const query = {\n      ...defaultParams,\n      url: `${projectUrl}/0`,\n      where: \"1=1\",\n      groupByFieldsForStatistics: \"Creator\",\n      outStatistics: [\n        {\n          statisticType: \"count\",\n          onStatisticField: \"Creator\",\n          outStatisticFieldName: \"creator_counts\"\n        }\n      ],\n      orderByFields: \"creator_counts DESC\",\n      sqlFormat: \"standard\",\n      params: {\n        token: this.props.token,\n      }\n    }\n    queryFeatures(query).then(res => {\n      const {labels, data} = res.features.reduce((acc, f) => {\n        acc.data.push(f.attributes['creator_counts']);\n        acc.labels.push(f.attributes['Creator']);\n        return acc;\n      }, {labels: [], data: []})\n\n      const nextState = {\n        labels: labels,\n        datasets: [{\n          label: 'Label Counts',\n          fill: false,\n          data: data,\n          borderColor: \"#56a5d8\",\n          backgroundColor: \"#56a5d8\"\n        }]\n      }\n      this.setState({userData: nextState});\n    });\n  }\n\n  componentDidUpdate(prevProps){\n    if(!this.props.project) return;\n    \n    if(!prevProps.project || prevProps.project.id !== this.props.project.id){\n      this._updateTimeSeriesDataset(this.props.project.url);\n      this._updateUserDataset(this.props.project.url);\n    }\n  }\n\n  componentDidMount(){\n\n    // if(this.props.project){\n    //   const timeSeries = this._getTimeSeriesDataset(this.props.project.url);\n    //   this.chart = new Chart(this.chartRef.current, timeSeries);\n    //   this.chart.show();\n    // }\n\n  }\n\n  render(){\n    return (\n      <div>\n        <h3 style={{marginTop: 0}}>Activity</h3>\n        <h5 style={{margin: \"0px\"}}>Over Time</h5>\n        <Line \n          data={this.state.labelData}\n          height={159}\n          options={{\n            scales: {\n              yAxes: [{\n                scaleLabel: {\n                  display: true,\n                  labelString: 'Label Count'\n                },\n                ticks: {\n                  beginAtZero: true\n                }\n              }]\n            }\n          }}/>\n        <h5 style={{margin: \"0px\"}}>By User</h5>\n        <Bar \n          data={this.state.userData}\n          height={159}\n          options={{\n            scales: {\n              yAxes: [{\n                scaleLabel: {\n                  display: true,\n                  labelString: 'Label Count'\n                },\n                ticks: {\n                  beginAtZero: true\n                }\n              }]\n            }\n          }}/>\n      </div>\n    )\n  }\n\n}\n\nexport default ChartView;","import React, {Component} from 'react';\nimport { loadModules } from 'esri-loader';\nimport {getProjectName} from '../Utils';\nimport {loader} from '../config';\nimport ChartView from './ChartView';\n\nconst dotRenderer = {\n  type: \"simple\",\n  symbol: {\n    type: \"simple-marker\",\n    size: 12,\n    style: \"square\",\n    color: [76,129,205,191],\n    outline: {\n      width: 1,\n      color: [0,0,0,255]\n    }\n  }\n};\n\nconst polygonRenderer = {\n  type: \"simple\",\n  symbol: {\n    type: \"simple-fill\",\n    color: [76,129,205,191],\n    outline: {\n      width: 1,\n      color: [0,0,0,255]\n    }\n  }\n}\n\nconst zoomSwitch = 17;\n\nclass MapView extends Component {\n\n  constructor(props, context){\n    super(props, context);\n    this.loadedModules = {};\n    this._onEditSync = this._onEditSync.bind(this);\n    this._onZoomChange = this._onZoomChange.bind(this);\n    this._chartRef = React.createRef();\n  }\n\n  _onEditSync(newValue, oldValue, propertyName, target){\n    if(!newValue && oldValue){\n      this.props.onProjectEdited(this.props.project);\n    }\n  }\n\n  _onZoomChange(newValue, oldValue){\n    if(!this.lyr) return;\n    if(newValue > zoomSwitch && oldValue < zoomSwitch){\n      this.lyr.renderer = polygonRenderer;\n    } else if(newValue < zoomSwitch && oldValue > zoomSwitch){\n      this.lyr.renderer = dotRenderer;\n    }\n  }\n\n  componentDidMount(){\n    loadModules([\n      'esri/views/MapView',\n      'esri/Map',\n      'esri/widgets/LayerList',\n      'esri/widgets/Editor',\n      'esri/layers/ImageryLayer',\n      'esri/layers/FeatureLayer',\n      'esri/core/watchUtils'\n    ], loader)\n    .then(([MapView, Map, LayerList, Editor, ImageryLayer, FeatureLayer, wU]) => {\n\n      this.loadedModules = {\n        FeatureLayer,\n        Editor\n      }\n\n      const rgbLyr = new ImageryLayer({\n        url: \"https://naip.arcgis.com/arcgis/rest/services/NAIP/ImageServer\",\n        title: \"NAIP Imagery - Natural Color\",\n        popupEnabled: false\n      })\n      const infrLyr = new ImageryLayer({\n        portalItem: {\n          id: \"e4da3b6720f545aeaaf3fe8141da1e21\"\n        },\n        title: \"NAIP Imagery - Color Infrared\",\n        visible: false,\n        popupEnabled: false\n      })\n      const ndviLyr = new ImageryLayer({\n        portalItem: {\n          id: \"aa9c87d6f17b452296252bd75005f6a4\"\n        },\n        title: \"NAIP Imagery - NDVI\",\n        visible: false,\n        popupEnabled: false\n      })\n\n      this.map = new Map({\n        basemap: \"gray-vector\",\n        layers: [ndviLyr, infrLyr, rgbLyr]\n      })\n      this.view = new MapView({\n        container: \"mapview\",\n        map: this.map,\n        center: [-117.18296, 34.05738],\n        zoom: 11,\n        constraints: {\n          snapToZoom: false\n        }\n      });\n\n      this.view.when(_ => {\n        const layerList = new LayerList({\n          view: this.view\n        });\n        this.view.ui.add(layerList, \"bottom-right\");\n\n        this.scaleHandler = this.view.watch('zoom', this._onZoomChange);\n        \n        if(!this.props.isEditor) {\n          return;\n        };\n        const editor = new Editor({\n          view: this.view,\n          label: 'Create and edit labels'\n        });\n        this.view.ui.add(editor, \"top-right\");\n        this.watchHandler = wU.watch(editor.viewModel, 'syncing', this._onEditSync);\n\n      }).catch(er => console.log(er));\n\n    })\n  }\n\n  _addLayerFromProps(){\n    const lM = this.loadedModules;\n    if(!lM.FeatureLayer) return;\n\n    const renderer = this.view.zoom > zoomSwitch\n      ? polygonRenderer\n      : dotRenderer;\n\n    this.lyr = new lM.FeatureLayer({\n      portalItem: {id: this.props.project.id},\n      title: getProjectName(this.props.project),\n      renderer\n    })\n    this.map.add(this.lyr);\n    this.lyr.queryExtent({where: \"1=1\"}).then(res => {\n      if(res.count > 0){\n        this.view.goTo(res.extent);\n      } else {\n        this.view.goTo(this.lyr.fullExtent);\n      }\n    })\n  }\n\n  componentDidUpdate(prevProps){\n    if(!this.props.project) return;\n    if(!prevProps.project){\n      this._addLayerFromProps()\n    } else if(prevProps.project.id !== this.props.project.id){\n      this.map.remove(this.lyr);\n      this._addLayerFromProps();\n    }\n  }\n\n  componentWillUnmount(){\n    if(this.watchHandler) this.watchHandler.remove();\n    if(this.scaleHandler) this.scaleHandler.remove();\n    this.view.ui.remove(this._chartRef.current);\n  }\n  \n  render() {\n\n    const chartVisible = this.props.project && !this.props.isEditor ? '' : 'none';\n    let chart = <div\n      ref={this._chartRef}\n      style={{\n        display: chartVisible,\n        position: \"absolute\",\n        top: \"80px\",\n        right: \"15px\",\n        width: \"280px\",\n        height: \"380px\",\n        padding: \"10px\",\n        background: \"white\",\n        boxShadow: \"0 1px 2px rgba(0, 0, 0, 0.3)\"\n      }}>\n      <ChartView project={this.props.project} token={this.props.token}/>\n    </div>\n\n\n    return (\n      <>\n        <div id=\"mapview\" style={{width: \"100%\", maxHeight: \"100%\", \"flexGrow\": 1}}/>\n        {chart}\n      </>\n    )\n  }\n  \n}\n\nexport default MapView;\n\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ProgressBarContainer = styled.div`\n  position: relative;\n  height: 20px;\n  width: 100%px;\n  border: 1px solid #959595;\n`;\n\nconst ProgressBarFiller = styled.div`\n  background: #9bc19c;\n  height: 100%;\n  width: ${props => props.width}%;\n  border-radius: inherit;\n  transition: width .2s ease-in;\n`;\n\nconst ProgressBar = ({percentage, rightLabel}) => (\n  <ProgressBarContainer>\n    <ProgressBarFiller width={percentage}/>\n  </ProgressBarContainer>\n)\n\nexport default ProgressBar;\n","import React, {PureComponent} from 'react';\nimport Card, {\n  CardTitle,\n  CardContent\n} from 'calcite-react/Card'\nimport Button from 'calcite-react/Button';\nimport ProgressBar from './ProgressBar';\nimport PencilIcon from 'calcite-ui-icons-react/PencilIcon';\nimport GraphTimeSeriesIcon from 'calcite-ui-icons-react/GraphTimeSeriesIcon';\nimport styled from 'styled-components';\nimport {getProjectName} from '../Utils';\n\nconst CornerButton = styled(Button)`\n  position: absolute;\n  top: 12px;\n  right: 16px;\n  padding: 4px;\n`\nconst AdjustedTitle = styled(CardTitle)`\n  width: calc(100% - 2.5rem)\n`\n\nconst ThinPencil = styled(PencilIcon)`\n  margin: 0 !important;\n`\nconst ThinGraph = styled(GraphTimeSeriesIcon)`\n  margin: 0 !important;\n`\n\nconst RightLabel = styled.div`\n  margin: 0;\n  float: right;\n`\n\nconst ProjectCard = styled(Card)`\n  border: ${props => props.selected ? '1px solid #0079c1' : ''}\n`\n\nclass ActionButton extends PureComponent{\n\n  constructor(props, context){\n    super(props,context);\n    this._onClick = this._onClick.bind(this);\n  }\n\n  _onClick() {\n    this.props.onClick(this.props.project);\n  }\n\n  render(){\n    const icon = this.props.isEditor\n      ? <ThinPencil/>\n      : <ThinGraph size={20}/>;\n    return (\n      <CornerButton\n        onClick={this._onClick}\n        small\n        clear\n        icon={icon}>\n      </CornerButton>\n    )\n  }\n}\n\nclass ProjectPanel extends PureComponent {\n\n  constructor(props, context){\n    super(props, context);\n    this.portal = props.portal;\n\n    this._getProjectCard = this._getProjectCard.bind(this);\n    this._onProjectSelected = this._onProjectSelected.bind(this);\n\n    this.state = {\n      projects: [],\n      selectedId: null\n    }\n  }\n\n  componentDidMount(){\n    const queryParams = {\n      query: \"access:shared\",\n      sortField: \"created\",\n      sortOrder: \"asc\",\n      num: 20\n    }\n    this.portal.queryItems(queryParams)\n      .then(res => {\n        let nextState = res.results.reduce((acc, p) => {\n          const tag = p.tags.find(t => t.includes('__nfeatures:'));\n          if(!tag) return acc;\n          const nFeatures = parseInt(tag.replace('__nfeatures:',''));\n          acc[p.id] = {max: nFeatures};\n          return acc;\n        }, {});\n\n        nextState.projects = res.results;\n        this.setState(nextState);\n        this.props.onProjectsLoaded(res.results);\n      })\n  }\n\n\n  _onProjectSelected(project){\n    this.setState({\n      selectedId: project.id\n    });\n    this.props.onProjectSelected(project);\n  }\n\n  _getProjectCard(project, i){\n    const title = getProjectName(project);\n\n    const max = this.state[project.id]\n      ? this.state[project.id].max\n      : undefined;\n    \n    const current = this.props.labelCounts[project.id]\n    ? this.props.labelCounts[project.id].count\n    : undefined;\n\n    const progress = max !== undefined && current !== undefined\n      ? Math.ceil(100* (current / max))\n      : 0;\n\n    const maxString = max ? max.toString() : '--';\n    const currentString = current ? current.toString() : '--';\n\n    return (\n      <ProjectCard selected={project.id === this.state.selectedId} key={project.id} style={{ maxWidth: '20rem', marginBottom: \"1rem\" }}>\n        <CardContent>\n          <AdjustedTitle>{title}</AdjustedTitle>\n          <ActionButton\n            project={project}\n            onClick={this._onProjectSelected}\n            isEditor={this.props.isEditor}/>\n          <ProgressBar percentage={progress}/>\n          <div style={{textAlign:\"right\"}}>\n            <RightLabel>{currentString}/{maxString} features</RightLabel>\n          </div>\n        </CardContent>\n      </ProjectCard>\n    )\n  }\n\n  render(){\n    const projects = this.state.projects.map(this._getProjectCard);\n    return (\n      <div style={{width: \"25rem\", padding: \"1rem\", boxShadow: \"0 1px 2px rgba(0, 0, 0, 0.3)\"}}>\n        <h3 style={{marginTop: 0}}>Projects</h3>\n        {projects}\n      </div>\n    )\n  }\n}\n\nexport default ProjectPanel;","import React from 'react';\nimport TopNav, {\n  TopNavBrand,\n  TopNavTitle,\n  TopNavList,\n  TopNavActionsList\n} from 'calcite-react/TopNav';\nimport Button from 'calcite-react/Button';\nimport SignOutIcon from 'calcite-ui-icons-react/SignOutIcon';\nimport Logo from './logo.svg';\nimport {LoginWindow, LoaderWindow} from './CommonComponents';\nimport MapView from './components/MapView';\nimport ProjectPanel from './components/ProjectPanel';\nimport { loadModules } from 'esri-loader';\nimport {portalUrl, appId, loader} from './config';\n\nclass App extends React.PureComponent{\n\n  constructor(props, context){\n    super(props, context);\n    this.esriId = null;\n\n    this._onSignInClick = this._onSignInClick.bind(this);\n    this._onSignOutClick = this._onSignOutClick.bind(this);\n    this._onProjectSelected = this._onProjectSelected.bind(this);\n    this._fetchLabelCountForProject = this._fetchLabelCountForProject.bind(this);\n    this.onProjectsLoaded = this.onProjectsLoaded.bind(this);\n    this.onProjectEdited = this.onProjectEdited.bind(this);\n\n    this.state = {\n      esriLoaded: false,\n      user: null,\n      project: null,\n      labelCounts: {}\n    }\n  }\n\n  componentDidMount(){\n    loadModules([\n      'esri/identity/OAuthInfo',\n      'esri/identity/IdentityManager',\n      'esri/portal/Portal',\n      'esri/layers/FeatureLayer'\n    ], loader)\n    .then(([OAuthInfo, esriId, Portal, FeatureLayer]) => {\n\n      this.loadedModules = {\n        FeatureLayer\n      }\n\n      const info = new OAuthInfo({appId});\n    \n      this.esriId = esriId;\n      this.esriId.registerOAuthInfos([info]);\n      this.portal = new Portal();\n\n      this.esriId.checkSignInStatus(portalUrl)\n        .then(_ => {\n          console.log(\"EFFIN HERE\");\n          return this.portal.load()\n        })\n        .then(_ => {\n\n          const isEditor = this.portal.user.privileges.find(p => p === 'features:user:edit')\n          ? true\n          : false;\n\n          this.setState({\n            esriLoaded: true,\n            user: this.portal.user.fullName,\n            token: this.portal.credential.token,\n            isEditor\n          });\n        })\n        .catch(er => {\n          if(er.name === 'identity-manager:not-authenticated'){\n            this.setState({esriLoaded: true, user: null, token: null, isEditor: null});\n          } else {\n            console.log(er);\n          }\n        });\n    });\n  }\n\n  _fetchLabelCountForProject(p){\n    const FL = this.loadedModules.FeatureLayer;\n    const lyr = new FL({url: p.url});\n    lyr.queryFeatureCount({where: \"1=1\"}).then(count => {\n      const nextCounts = {\n        ...this.state.labelCounts,\n        [p.id]: {count}\n      }\n      this.setState({\n        labelCounts: nextCounts\n      });\n    });\n  }\n\n  onProjectsLoaded(projects){\n    projects.forEach(this._fetchLabelCountForProject);\n  }\n\n  onProjectEdited(project){\n    this._fetchLabelCountForProject(project);\n    \n  }\n\n  _onSignInClick(){\n    this.esriId.getCredential(portalUrl);\n  }\n  _onSignOutClick(){\n    this.esriId.destroyCredentials();\n    this.setState({esriLoaded: true, user: null, token: null, isEditor: null});\n  }\n\n  _onProjectSelected(project){\n    this.setState({\n      project\n    });\n  }\n\n  render(){\n\n    let window;\n    if(!this.state.esriLoaded){\n      window = <LoaderWindow/>\n    } else if (!this.state.user){\n      window = <LoginWindow onClick={this._onSignInClick}/>\n    } else {\n      window = (\n        <>\n          <ProjectPanel\n            portal={this.portal}\n            onProjectSelected={this._onProjectSelected}\n            labelCounts={this.state.labelCounts}\n            onProjectsLoaded={this.onProjectsLoaded}\n            isEditor={this.state.isEditor}/>\n          <MapView\n            project={this.state.project}\n            onProjectEdited={this.onProjectEdited}\n            isEditor={this.state.isEditor}\n            token={this.state.token}/>\n        </>\n      )\n    }\n\n    let signOutButton = this.state.user\n    ? <Button\n        white\n        icon={<SignOutIcon size={25}/>}\n        iconPosition=\"after\"\n        onClick={this._onSignOutClick}>\n        {this.state.user}\n      </Button>\n    : null;\n\n    return (\n      <div>\n        <TopNav>\n          <TopNavBrand src={Logo}/>\n          <TopNavTitle>Label App</TopNavTitle>\n          <TopNavList/>\n          <TopNavActionsList>\n            {signOutButton}\n          </TopNavActionsList>\n        </TopNav>\n        <div style={{width: \"100vw\", height: \"calc(100vh - 4rem)\", display: \"flex\", justifyContent: \"center\"}}>\n          {window}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport CalciteThemeProvider from 'calcite-react/CalciteThemeProvider';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <CalciteThemeProvider>\n    <App />\n  </CalciteThemeProvider>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.22dcb7aa.svg\";"],"sourceRoot":""}